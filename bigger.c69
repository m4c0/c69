extern fn int    close(int fd);
extern fn void   exit (int code);
extern fn int    open (char[] filename, int mode);
extern fn size_t read (int fd, any ptr, size_t len);
extern fn size_t write(int fd, any ptr, size_t len);

char[]       g_file;
char[102400] g_file_buf;
int          g_file_len;

fn void write_str(char[] msg) write(2, msg, msg.len);
fn void write_num(int n) {
  if (n < 0) {
    write_str("-");
    n = -n;
  }
  if (n >= 10) write_num(n / 10);
  char b = '0' + (n % 10);
  write(2, b, 1);
}

fn void warn(int j, char[] msg) {
  int line = 1;
  int col  = 1;

  write_str(g_file);
  if (j >= 0) {
    write_str(":");
    write_num(line);
    write_str(":");
    write_num(col);
  }
  write_str(": ");
  write_str(msg);
  write_str("\n");
}

fn void fail(int j, char[] msg) {
  warn(j, msg);
  exit(1);
}

fn void slurp(char[] file) {
  g_file = file;
  int fd = open(file, 0);

  int len = read(fd, g_file_buf, 102400 - 1);
  if (len <= 0) fail(0, "failed to read file");

  close(fd);
}
